["```py\ndef search(L, e):\n    \"\"\"Assumes L is a list.\n       Returns True if e is in L and False otherwise\"\"\"\n```", "```py\nfor i in range(len(L)):\n    if L[i] == e:\n        return True\nreturn False\n```", "```py\nL = [2,1,4,5,3]\nprint(merge_sort(L), merge_sort(L, lambda x, y: x > y))\n```", "```py\n[1, 2, 3, 4, 5] [5, 4, 3, 2, 1]\n```", "```py\nSorted by last name = ['Tom Brady', 'Gisele Bundchen', 'Eric Grimson']\nSorted by first name = ['Eric Grimson', 'Gisele Bundchen', ‘Tom Brady']\n```", "```py\nL = [3,5,2]\nD = {'a':12, 'c':5, 'b':'dog'}\nprint(sorted(L))\nprint(L)\nL.sort()\nprint(L)\nprint(sorted(D))\nD.sort()\n```", "```py\n[2, 3, 5]\n[3, 5, 2]\n[2, 3, 5]\n['a', 'b', 'c']\nAttributeError: ‘dict' object has no attribute ‘sort'\n```", "```py\nL = [[1,2,3], (3,2,1,0), 'abc']\nprint(sorted(L, key = len, reverse = True))\n```", "```py\n`[(3, 2, 1, 0), [1, 2, 3], 'abc']`\n```", "```py\n﻿import random\nD = Int_dict(17)\nfor i in range(20):\n    #choose a random int in the range 0 to 10**5 - 1\n    key = random.choice(range(10**5))\n    D.add_entry(key, i)\nprint('The value of the Int_dict is:')\nprint(D)\n```", "```py\nThe value of the Int_dict is:\n{99740:6,61898:8,15455:4,99913:18,276:19,63944:13,79618:17,51093:15,8271:2,3715:14,74606:1,33432:3,58915:7,12302:12,56723:16,27519:11,64937:5,85405:9,49756:10,17611:0}\n```", "```py\nprint('The buckets are:')\nfor hash_bucket in D.buckets: #violates abstraction barrier\n    print('  ', hash_bucket)\n```", "```py\n﻿The buckets are:\n   []\n   [(99740, 6), (61898, 8)]\n   [(15455, 4)]\n   []\n   [(99913, 18), (276, 19)]\n   []\n   []\n   [(63944, 13), (79618, 17)]\n   [(51093, 15)]\n   [(8271, 2), (3715, 14)]\n   [(74606, 1), (33432, 3), (58915, 7)]\n   [(12302, 12), (56723, 16)]\n   []\n   [(27519, 11)]\n   [(64937, 5), (85405, 9), (49756, 10)]\n   []\n   [(17611, 0)]\n```"]