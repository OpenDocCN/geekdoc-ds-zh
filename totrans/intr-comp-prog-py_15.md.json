["```py\n﻿Use greedy by value to fill knapsack of size 20\nTotal value of items taken is 200.0\n    <computer, 200, 20>\nUse greedy by weight to fill knapsack of size 20\nTotal value of items taken is 170.0\n    <book, 10, 1>\n    <vase, 50, 2>\n    <radio, 20, 4>\n    <painting, 90, 9>\nUse greedy by density to fill knapsack of size 20\nTotal value of items taken is 255.0\n    <vase, 50, 2>\n    <clock, 175, 10>\n    <book, 10, 1>\n    <radio, 20, 4>\n```", "```py\ndef `gen_powerset`(`item`s, con`str`aint, get_val, get_weight)\n```", "```py\nTotal value of items taken is 275.0\n<clock, 175, 10>\n<painting, 90, 9>\n<book, 10, 1>\n```", "```py\n﻿Current DFS path: 0\nCurrent DFS path: 0->1\nCurrent DFS path: 0->1->2\nCurrent DFS path: 0->1->2->3\nCurrent DFS path: 0->1->2->3->4\nCurrent DFS path: 0->1->2->3->5\nCurrent DFS path: 0->1->2->4\nCurrent DFS path: 0->2\nCurrent DFS path: 0->2->3\nCurrent DFS path: 0->2->3->4\nCurrent DFS path: 0->2->3->5\nCurrent DFS path: 0->2->3->1\nCurrent DFS path: 0->2->4\nShortest path found by DFS: 0->2->3->5\n```", "```py\nsp = BFS(g, nodes[0], nodes[5])\nprint('Shortest path found by BFS:', print_path(sp))\n```", "```py\nCurrent BFS path: 0\nCurrent BFS path: 0->1\nCurrent BFS path: 0->2\nCurrent BFS path: 0->1->2\nCurrent BFS path: 0->2->3\nCurrent BFS path: 0->2->4\nCurrent BFS path: 0->1->2->3\nCurrent BFS path: 0->1->2->4\nCurrent BFS path: 0->2->3->4\nCurrent BFS path: 0->2->3->5\nShortest path found by BFS: 0->2->3->5\n```"]