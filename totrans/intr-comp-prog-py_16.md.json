["```py\ndef fib(n):\n    \"\"\"Assumes n is an int >= 0\n       Returns Fibonacci of n\"\"\"\n    if n == 0 or n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)\n```", "```py\n﻿ ﻿def make_change(coin_vals, change):\n    \"\"\"coin_vals is a list of positive ints and coin_vals[0] = 1\n       change is a positive int,\n       return the minimum number of coins needed to have a set of\n          coins the values of which sum to change. Coins may be used\n          more than once. For example, make_change([1, 5, 8], 11)\n          should return 3.\"\"\"\n```", "```py\n<c, 8, 2>\n<b, 7, 3>\nTotal value of items taken = 15\n```", "```py\nval, taken = fast_max_val(items, 1000)\n```", "```py\nitems.append(Item(str(i),\n                  random.randint(1, max_val),\n                  random.randint(1, max_weight)))\n```", "```py\nitems.append(Item(str(i),\n                  random.randint(1, max_val),\n                  random.randint(1, max_weight)*random.random()))\n```"]