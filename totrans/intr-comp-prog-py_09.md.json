["```py\ndef is_smaller(x, y):\n     \"\"\"Assumes x and y are ints\n        Returns True if x is less than y and False otherwise.\"\"\"\n```", "```py\n`x positive, y positive, x < y x positive, y positive, y < x x negative, y negative, x < y x negative, y negative, y < x x negative, y positive x positive, y negative x = 0, y = 0 x = 0, y` `≠ 0 x ≠ 0, y = 0`\n```", "```py\ndef sqrt(x, epsilon):\n    \"\"\"Assumes x, epsilon floats\n               x >= 0\n               epsilon > 0\n       Returns result such that\n               x-epsilon <= result*result <= x+epsilon\"\"\"\n```", "```py\ndef copy(L1, L2):\n    \"\"\"Assumes L1, L2 are lists\n       Mutates L2 to be a copy of L1\"\"\"\n    while len(L2) > 0: #remove all elements from L2\n        L2.pop() #remove last element of L2\n    for e in L1: #append L1's elements to initially empty L2\n        L2.append(e)\n```", "```py\ndef is_prime(x):\n    \"\"\"Assumes x is a nonnegative int\n       Returns True if x is prime; False otherwise\"\"\"\n    if x <= 2:\n        return False\n    for i in range(2, x):\n        if x%i == 0:\n            return False\n    return True\n```", "```py\ndef abs(x):\n    \"\"\"Assumes x is an int\n       Returns x if x>=0 and –x otherwise\"\"\"\n    if x < -1:\n        return -x\n    else:\n        return x\n```", "```py\n>>> silly(2)\nEnter element: a\nEnter element: b\n```", "```py\n﻿def silly(n):\n    \"\"\"Assumes n is an int > 0\n        Gets n inputs from user\n        Prints 'Yes' if the sequence of inputs forms a palindrome;\n            'No' otherwise\"\"\"\n    result = []\n    for i in range(n):\n        elem = input('Enter element: ')\n        result.append(elem)\n    print(result)\n    if is_pal(result):\n        print('Yes')\n    else:\n        print('No')\n```", "```py\n`print(temp, x)` \n```", "```py\n﻿def is_pal(x):\n    \"\"\"Assumes x is a list\n        Returns True if the list is a palindrome; False otherwise\"\"\"\n    temp = x[:]\n    temp.reverse()\n    return temp == x\n```"]