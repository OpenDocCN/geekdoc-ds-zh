["```py\ndef f(i):\n   \"\"\"Assumes i is an int and i >= 0\"\"\"\n   answer = 1\n   while i >= 1:\n      answer *= i\n      i -= 1\n   return answer\n```", "```py\ndef linear_search(L, x):\n   for e in L:\n      if e == x:\n         return True\n   return False\n```", "```py\ndef fact(n):\n   \"\"\"Assumes n is a positive int\n      Returns n!\"\"\"\n   answer = 1\n   while n > 1:\n      answer *=  n\n      n -= 1\n   return answer\n```", "```py\nNumber of additions so far 1000\nNumber of additions so far 1010\nNumber of additions so far 1210\n```", "```py\nNumber of additions so far 1000\nNumber of additions so far 2000\nNumber of additions so far 2002000\n```", "```py\n﻿ ﻿def g(L, e):\n    \"\"\"L a list of ints, e is an int\"\"\"\n    for i in range(100):\n        for e1 in L:\n            if e1 == e:\n                return True\n    return False\ndef h(L, e):\n    \"\"\"L a list of ints, e is an int\"\"\"\n    for i in range(e):\n        for e1 in L:\n            if e1 == e:\n                return True\n    return False\n```", "```py\n﻿def int_to_str(i):\n   \"\"\"Assumes i is a nonnegative int\n      Returns a decimal string representation of i\"\"\"\n   digits = '0123456789'\n   if i == 0:\n      return '0'\n   result = ''\n   while i > 0:\n      result = digits[i%10] + result\n      i = i//10\n   return result\n```", "```py\n﻿def add_digits(n):\n   \"\"\"Assumes n is a nonnegative int\n      Returns the sum of the digits in n\"\"\"\n   string_rep = int_to_str(n)\n   val = 0\n   for c in string_rep:\n       val += int(c)\n   return val\n```", "```py\n﻿def add_digits(s):\n   \"\"\"Assumes s is a string of digits\n      Returns the sum of the digits in s\"\"\"\n   val = 0\n   for c in string_rep:\n       val += int(c)\n   return val\n```", "```py\ndef factorial(x):\n   \"\"\"Assumes that x is a positive int\n      Returns x!\"\"\"\n   if x == 1:\n      return 1\n   else:\n      return x*factorial(x-1)\n```", "```py\n`factorial(x)`, `factorial(x-1)`, `factorial(x-2), … , factorial(1)`\n```"]