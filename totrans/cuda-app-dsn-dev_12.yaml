- en: Chapter 11\. CUDA for Real ProblemsCUDA gives developers the ability to accelerate
    applications on the GPU by one to three orders of magnitude over conventional
    processors. Knowing how to think and program in CUDA is the necessary first step
    in the process of growing and maturing into an adept CUDA programmer. Look to
    the Internet and technical literature to find projects that provide general solutions
    and design patterns that can be adapted to your projects. CUDA is fast; reinventing
    the wheel is slow. The chapters in this book were designed to teach and provide
    some initial frameworks for future applications. For example, the simple C++ functor
    framework in [Chapter 2](B9780123884268000021.xhtml#B978-0-12-388426-8.00002-1)
    implemented a general parallel mapping for pattern recognition and optimization
    that runs 85 times faster on a GPU than on a high-end quad-core processor and
    delivers a 341 times greater increase over single-core performance. [Chapter 10](B9780123884268000100.xhtml#B978-0-12-388426-8.00010-0)
    extended this example to use MPI to run on computational clusters containing hundreds
    of GPUs. The 500 GPU TACC Longhorn cluster is one system that can provide nearly
    half a petaflop (500,000 gigaflops) of single-precision floating-point performance
    using this parallel mapping. These examples turn your GPU into an engine to find
    patterns in complex data that is more powerful than the largest supercomputer
    that existed prior to 1996\. Data visualization is a natural extension of the
    computational capabilities of GPUs. As shown in [Chapter 9](B9780123884268000094.xhtml#B978-0-12-388426-8.00009-4),
    mixing CUDA with OpenGL interoperability means that the data does not even need
    to move off the GPU. That said, online information and technical literature extends
    far beyond these examples and the pages of this book. This chapter points the
    way to other projects for advanced usage and programming.**Keywords**MDS (Multi
    Dimensional Scaling), Mutual Information, Force directed graph layout, phylogenetic
    trees, data reduction. Curse of dimensionality, Support Vector Machine (SVM),
    Monte Carlo.CUDA gives developers the ability to accelerate applications on the
    GPU by one to three orders of magnitude over conventional processors. Knowing
    how to think and program in CUDA is the necessary first step in the process of
    growing and maturing into an adept CUDA programmer. Look to the Internet and technical
    literature to find projects that provide general solutions and design patterns
    that can be adapted to your projects. CUDA is fast; reinventing the wheel is slow.
    The chapters in this book were designed to teach and provide some initial frameworks
    for future applications. For example, the simple C++ functor framework in [Chapter
    2](B9780123884268000021.xhtml#B978-0-12-388426-8.00002-1) implemented a general
    parallel mapping for pattern recognition and optimization that runs 85 times faster
    on a GPU than on a high-end quad-core processor and delivers a 341 times greater
    increase over single-core performance. [Chapter 10](B9780123884268000100.xhtml#B978-0-12-388426-8.00010-0)
    extended this example to use MPI to run on computational clusters containing hundreds
    of GPUs. The 500 GPU TACC Longhorn cluster is one system that can provide nearly
    half a petaflop (500,000 gigaflops) of single-precision floating-point performance
    using this parallel mapping. These examples turn your GPU into an engine to find
    patterns in complex data that is more powerful than the largest supercomputer
    that existed prior to 1996\. [¹](#fn0010) Data visualization is a natural extension
    of the computational capabilities of GPUs. As shown in [Chapter 9](B9780123884268000094.xhtml#B978-0-12-388426-8.00009-4),
    mixing CUDA with OpenGL interoperability means that the data does not even need
    to move off the GPU. That said, online information and technical literature extends
    far beyond these examples and the pages of this book. This chapter points the
    way to other projects for advanced usage and programming.¹The United States Sandia
    National Laboratory built the first supercomputer that was able to perform more
    than a trillion floating-point operations in 1996.Do not consider this chapter
    to be an exhaustive list. Instead, it provides a broad introduction to some of
    the popular techniques and packages that use CUDA. Most of the methods discussed
    will provide a link to a downloadable CUDA source package that can be reviewed,
    built, and used. There are many other excellent resources available on the Internet
    and in technical literature. A good starting point is the CUDA showcase in the
    developer zone that contains hundreds of links to CUDA techniques and papers.
    [²](#fn9000)²[http://developer.nvidia.com/cuda-action-research-apps](http://developer.nvidia.com/cuda-action-research-apps).At
    the end of this chapter, the reader will have been introduced to:■ A few techniques
    to reduce high-dimensional data to low dimensions.■ Force-directed graphs for
    visualization.■ Multidimensional scaling (MDS).■ Mutual information.■ Monte Carlo
    methods.■ Molecular modeling.
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 第11章 CUDA在实际问题中的应用CUDA使开发者能够在GPU上将应用程序的加速能力提高一个到三个数量级，相比于传统处理器。了解如何在CUDA中思考和编程是成长为熟练CUDA程序员的必要第一步。请参考互联网和技术文献，寻找提供通用解决方案和设计模式的项目，这些模式可以适应你的项目。CUDA速度快；重新发明轮子则很慢。本书中的章节旨在教授并提供一些未来应用的初步框架。例如，[第2章](B9780123884268000021.xhtml#B978-0-12-388426-8.00002-1)中的简单C++函数框架实现了一种通用的并行映射，用于模式识别和优化，其在GPU上的运行速度比高端四核处理器快85倍，并且在单核性能上提供了341倍的提升。[第10章](B9780123884268000100.xhtml#B978-0-12-388426-8.00010-0)将这个例子扩展到使用MPI在包含数百个GPU的计算集群上运行。500
    GPU TACC Longhorn集群是一个可以利用这种并行映射提供近半个petaflop（500,000 gigaflops）单精度浮点性能的系统。这些例子将你的GPU变成一个引擎，用于在复杂数据中寻找模式，其能力超过了1996年之前存在的最大超级计算机。数据可视化是GPU计算能力的自然延伸。如[第9章](B9780123884268000094.xhtml#B978-0-12-388426-8.00009-4)所示，将CUDA与OpenGL互操作性结合意味着数据甚至不需要从GPU上移动。也就是说，在线信息和技术文献远远超出了这些例子和本书的页面。本章指引了其他高级用法和编程项目的方向。**关键词**MDS（多维尺度分析）、互信息、力导向图布局、系统发育树、数据降维。维度诅咒、支持向量机（SVM）、蒙特卡洛。CUDA使开发者能够在GPU上将应用程序的加速能力提高一个到三个数量级，相比于传统处理器。了解如何在CUDA中思考和编程是成长为熟练CUDA程序员的必要第一步。请参考互联网和技术文献，寻找提供通用解决方案和设计模式的项目，这些模式可以适应你的项目。CUDA速度快；重新发明轮子则很慢。本书中的章节旨在教授并提供一些未来应用的初步框架。例如，[第2章](B9780123884268000021.xhtml#B978-0-12-388426-8.00002-1)中的简单C++函数框架实现了一种通用的并行映射，用于模式识别和优化，其在GPU上的运行速度比高端四核处理器快85倍，并且在单核性能上提供了341倍的提升。[第10章](B9780123884268000100.xhtml#B978-0-12-388426-8.00010-0)将这个例子扩展到使用MPI在包含数百个GPU的计算集群上运行。500
    GPU TACC Longhorn集群是一个可以利用这种并行映射提供近半个petaflop（500,000 gigaflops）单精度浮点性能的系统。这些例子将你的GPU变成一个引擎，用于在复杂数据中寻找模式，其能力超过了1996年之前存在的最大超级计算机。[¹](#fn0010)
    数据可视化是GPU计算能力的自然延伸。如[第9章](B9780123884268000094.xhtml#B978-0-12-388426-8.00009-4)所示，将CUDA与OpenGL互操作性结合意味着数据甚至不需要从GPU上移动。也就是说，在线信息和技术文献远远超出了这些例子和本书的页面。本章指引了其他高级用法和编程项目的方向。¹美国桑迪亚国家实验室在1996年建造了第一台能够执行超过一万亿次浮点运算的超级计算机。请不要将本章视为详尽无遗的列表。相反，它提供了一些流行技术和使用CUDA的包的广泛介绍。大多数讨论的方法将提供一个可下载的CUDA源包的链接，可以进行审查、构建和使用。互联网上和技术文献中还有许多其他优秀资源。一个好的起点是开发者专区的CUDA展示，其中包含数百个CUDA技术和论文的链接。[²](#fn9000)²[http://developer.nvidia.com/cuda-action-research-apps](http://developer.nvidia.com/cuda-action-research-apps)。在本章结束时，读者将了解到：■
    几种将高维数据降至低维的技术。■ 用于可视化的力导向图。■ 多维尺度分析（MDS）。■ 互信息。■ 蒙特卡洛方法。■ 分子建模。
- en: Working with High-Dimensional Data
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理高维数据
- en: We live in the age of data. Automatic systems collect most minute details of
    transactions and interactions in both physical and social systems. The patterns
    are there, but where?With a simple database query or Internet search, it is possible
    to extract an interesting data set that concatenates a number of different measures
    (or observations) for each event. The events might be customer purchases or the
    spectral data of hundreds of stars. Multiple events can be represented as the
    rows of a matrix in which each row is an event and the columns of each row contain
    measurements concerning the event. A common question to ask is, “Which rows are
    similar to each other?” Phrased another way, the question becomes, “Which events,
    or vectors, are close to each other?”For many problems, it is possible to calculate
    the distance between each row in the matrix using a metric such as *Euclidean
    distance*. Euclidean distance is a measure of distance that one would obtain with
    a ruler and the Pythagorean formula. Those rows that are close in distance can
    be considered “similar” to each other and those that are far away are “not similar.”
    There are many other distance measures aside from Euclidean distance, but Euclidean
    distance is intuitively easy to understand.The curse of dimensionality discussed
    in [Chapter 3](B9780123884268000033.xhtml#B978-0-12-388426-8.00003-3) is why working
    in a high-dimensional space is not practical for many problems. For example, asking
    for all rows that are closer than some distance from a given point in high-dimensional
    space can return either no values (because the sampling is very sparse) or nearly
    all the data (because the volume of the search region is so large that it encompasses
    most or all of the known data). In either case, the answer is meaningless.Decreasing
    the dimensionality of a search exponentially decreases the volume of the search
    region. This is one of the reasons why data miners like working in lower-dimensional
    spaces—it increases the chance of getting a meaningful answer to the question,
    “Which points in the low-dimensional space are close to each other?” Of course,
    the projection used to convert the high-dimensional data to the low-dimensional
    space must preserve the distance relationships between the points.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: PCA/NLPCA
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PCA/NLPCA
- en: As discussed in [Chapter 3](B9780123884268000033.xhtml#B978-0-12-388426-8.00003-3),
    autoencoders, Principle Components Analysis (PCA), and Nonlinear Principle Components
    Analysis (NLPCA) are some of the techniques used to represent high-dimensional
    data in a lower-dimensional space. The example code in [Chapter 3](B9780123884268000033.xhtml#B978-0-12-388426-8.00003-3)
    essentially passed high-dimensional data through an information bottleneck (the
    bottleneck neurons) in such a way that the high-dimensional data can be reconstructed.
    Measuring the error between the original and reconstructed high-dimensional data
    provides a measure of success. A low error implies that the projection to low
    dimensions preserved the distance relationships between the points in the high-dimensional
    data.The example code in [Chapter 3](B9780123884268000033.xhtml#B978-0-12-388426-8.00003-3)
    can be adapted to work with your own data sets simply by modifying the **genData()**
    method. Similarly, the data generator in [Chapter 10](B9780123884268000100.xhtml#B978-0-12-388426-8.00010-0)
    can be changed to one that writes your own data to a file. In either case, modifying
    the *CalcError.h* file will let you define your own PCA or NLPCA architecture.
    Using one, two, or three bottleneck neurons means that the low-dimensional data
    can be visualized with most 2D and 3D graphics packages such as gnuPlot, Excel,
    MATLAB, and many others.For more information on autoencoders and other neural
    network based approaches, see the work of Geoffrey Hinton ([Hinton & Salakhutdinov,
    2006](B978012388426800015X.xhtml#ref63)) [³](#fn0015) and many others. The website
    [http://nlpca.org](http://nlpca.org) is a good starting point to learn about NLPCA,
    especially for MATLAB users.³[http://www.cs.toronto.edu/~hinton/](http://www.cs.toronto.edu/~hinton).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 如[第3章](B9780123884268000033.xhtml#B978-0-12-388426-8.00003-3)所讨论，自动编码器、主成分分析（PCA）和非线性主成分分析（NLPCA）是一些用于将高维数据表示为低维空间的技术。[第3章](B9780123884268000033.xhtml#B978-0-12-388426-8.00003-3)中的示例代码本质上是将高维数据通过信息瓶颈（瓶颈神经元）进行处理，以便能够重建这些高维数据。通过测量原始数据和重建数据之间的误差，可以衡量成功的程度。低误差意味着低维投影保留了高维数据中点与点之间的距离关系。[第3章](B9780123884268000033.xhtml#B978-0-12-388426-8.00003-3)中的示例代码可以通过修改**genData()**方法来适应你自己的数据集。同样，[第10章](B9780123884268000100.xhtml#B978-0-12-388426-8.00010-0)中的数据生成器可以更改为一个将你自己的数据写入文件的生成器。在这两种情况下，修改*CalcError.h*文件可以让你定义自己的PCA或NLPCA架构。使用一个、两个或三个瓶颈神经元意味着低维数据可以通过大多数2D和3D图形软件包（如gnuPlot、Excel、MATLAB等）进行可视化。有关自动编码器和其他基于神经网络的方法的更多信息，请参见Geoffrey
    Hinton的工作（[Hinton & Salakhutdinov, 2006](B978012388426800015X.xhtml#ref63)）[³](#fn0015)以及许多其他人。[http://nlpca.org](http://nlpca.org)网站是学习NLPCA的一个很好的起点，特别是对于MATLAB用户。[http://www.cs.toronto.edu/~hinton/](http://www.cs.toronto.edu/~hinton/)。
- en: Multidimensional Scaling
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 多维尺度分析
- en: An alternative perspective on dimensionality reduction is offered by multidimensional
    scaling (MDS). MDS is another classical approach that maps a high-dimensional
    data set to a lower dimensional space, but does so in an attempt to preserve pairwise
    distances. Numerous variants of the classical method have been developed. An excellent
    reference is *Multidimensional Scaling* ([Cox & Cox, 2008](B978012388426800015X.xhtml#ref25)).The
    Glimmer package implements MDS on the GPU ([Ingram, Munzner, & Olano, 2009](B978012388426800015X.xhtml#ref76)).
    Variable speedups depending on data size range from 10–15 times over a conventional
    processor. The source code can be freely downloaded from the University of British
    Columbia website. [⁴](#fn0020)⁴[http://www.cs.ubc.ca/~sfingram/glimmer/](http://www.cs.ubc.ca/~sfingram/glimmer).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 多维尺度分析（MDS）提供了一种关于降维的替代视角。MDS是另一种经典方法，它将高维数据集映射到低维空间，但其目的是尽量保持成对的距离。已经开发出了许多经典方法的变种。一篇很好的参考书籍是*多维尺度分析*（[Cox
    & Cox, 2008](B978012388426800015X.xhtml#ref25)）。Glimmer包在GPU上实现了MDS（[Ingram, Munzner,
    & Olano, 2009](B978012388426800015X.xhtml#ref76)）。根据数据大小，速度提升的范围为传统处理器的10到15倍。源代码可以从不列颠哥伦比亚大学的网站免费下载。[⁴](#fn0020)⁴[http://www.cs.ubc.ca/~sfingram/glimmer/](http://www.cs.ubc.ca/~sfingram/glimmer)。
- en: K-Means Clustering
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: K-Means 聚类
- en: K-means clustering partitions a number of events into k-clusters in which each
    event belongs to the cluster with the nearest mean. Data sets with a billion points
    are common in today's real-world applications. With CUDA GPU acceleration, Hewlett-Packard
    reports that a data set with a billion data points can be clustered within minutes
    ([Wu, Zhang, & Hsu, 2009](B978012388426800015X.xhtml#ref144)). The HP software
    claims an order of magnitude increased performance over a highly optimized CPU-only
    version running on eight cores, and about 300 times performance boost over the
    popular MineBench benchmark ([Narayanan et al., 2006](B978012388426800015X.xhtml#ref99))
    running on a single core. Many other researchers ([Hong-tao, Li-li, Dan-tong,
    Zhan-shan, & He, 2009](B978012388426800015X.xhtml#ref65); [Ma & Agrawal, 2009](B978012388426800015X.xhtml#ref88);
    [Shalom, Dash, & Tue, 2008](B978012388426800015X.xhtml#ref118)) report large speedups
    on K-means.A freely downloadable version of K-means written by Serban Giuroiu
    is available from GitHub. [⁵](#fn0025) It is reportedly 50 times faster than a
    sequential version.⁵[https://github.com/serban/kmeans](https://github.com/serban/kmeans).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: K-means 聚类将若干事件划分为 k 个簇，每个事件都归属于距离其均值最近的簇。在当今的实际应用中，拥有十亿数据点的数据集已十分常见。借助 CUDA
    GPU 加速，惠普公司报告称，拥有十亿数据点的数据集可以在几分钟内完成聚类处理（[Wu, Zhang, & Hsu, 2009](B978012388426800015X.xhtml#ref144)）。惠普软件声称，相较于在八核
    CPU 上运行的高度优化的仅 CPU 版本，其性能提升了一个数量级；而与流行的 MineBench 基准测试（[Narayanan et al., 2006](B978012388426800015X.xhtml#ref99)）在单核上运行时相比，性能提升了约
    300 倍。许多其他研究者（[Hong-tao, Li-li, Dan-tong, Zhan-shan, & He, 2009](B978012388426800015X.xhtml#ref65)；[Ma
    & Agrawal, 2009](B978012388426800015X.xhtml#ref88)；[Shalom, Dash, & Tue, 2008](B978012388426800015X.xhtml#ref118)）也报告了
    K-means 聚类的显著加速。Serban Giuroiu 编写的 K-means 版本可以从 GitHub 上免费下载。[⁵](#fn0025) 据称其运行速度是顺序版本的
    50 倍。[https://github.com/serban/kmeans](https://github.com/serban/kmeans)。
- en: Expectation-Maximization
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 期望最大化
- en: K-means and MDS are similar to the expectation-maximization (EM) algorithm for
    mixtures of Gaussians in that they both attempt to find the centers of natural
    clusters in the data as well as in the iterative refinement approach employed
    by both algorithms. The EM algorithm is widely used in the fields of signal processing
    and data mining. A freely downloadable version of the EM method with a reported
    170-times increase over a reference CPU implementation is available. [⁶](#fn0030)
    NVIDIA published a paper with a similar reported speedup over a naïve implementation
    ([Kumar, Satoor, & Buck, 2009](B978012388426800015X.xhtml#ref83)). The EM method
    can also be implemented as a functor in the optimization framework provided in
    this book. The CUDA-MEME package discussed later in this chapter is another freely
    downloadable EM package.⁶[http://andrewharp.com/gmmcuda](http://andrewharp.com/gmmcuda).The
    expectation-maximization algorithm is also used to discover motifs in social network
    and biological data. GPU-MEME is reported to provide an order of magnitude speedup
    on a single GPU and two orders of magnitude speedup on a compute cluster ([Chen,
    Schmidt, Weiguo, & Müller-Wittig, 2008](B978012388426800015X.xhtml#ref17)). CUDA-MEME
    is a freely downloadable motif discovery software package[⁷](#fn0035) based on
    the GPU-MEME paper.⁷[http://www.nvidia.com/object/meme_on_tesla.html](http://www.nvidia.com/object/meme_on_tesla.html).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: K-means 和 MDS 类似于高斯混合模型的期望最大化（EM）算法，它们都试图找到数据中自然聚类的中心，并且采用了类似的迭代优化方法。EM 算法广泛应用于信号处理和数据挖掘领域。EM
    方法有一个免费下载版本，报告称其速度比参考 CPU 实现快了 170 倍。[⁶](#fn0030) NVIDIA 发布了一篇论文，报告了一个类似的加速结果，与一个简单实现相比有类似的速度提升（[Kumar,
    Satoor, & Buck, 2009](B978012388426800015X.xhtml#ref83)）。EM 方法也可以在本书提供的优化框架中作为函数式对象实现。本章后面将讨论的
    CUDA-MEME 包是另一个免费的 EM 包。[http://andrewharp.com/gmmcuda](http://andrewharp.com/gmmcuda)。期望最大化算法还被用于发现社交网络和生物数据中的模式。报告称，GPU-MEME
    在单个 GPU 上提供了数量级的加速，在计算集群上提供了两倍数量级的加速（[Chen, Schmidt, Weiguo, & Müller-Wittig,
    2008](B978012388426800015X.xhtml#ref17)）。CUDA-MEME 是基于 GPU-MEME 论文的一个免费下载的模式发现软件包[⁷](#fn0035)。[http://www.nvidia.com/object/meme_on_tesla.html](http://www.nvidia.com/object/meme_on_tesla.html)。
- en: Support Vector Machines
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 支持向量机
- en: Support vector machines (SVM) are a popular machine learning method to analyze
    data and recognize patterns. An SVM performs classification by constructing an
    *N*-dimensional *hyperplane* (a plane generalized into *N* dimensions) that optimally
    separates the data into two categories. They are used for classification and regression
    analysis, among other tasks. SVM models are closely related to neural networks.
    In fact, an SVM model using a sigmoid kernel function is equivalent to a two-layer
    perceptron neural network. Speedups of 150 times on a GPU have been reported in
    the literature ([Catanzaro, Sundaram, & Keutzer, 2008](B978012388426800015X.xhtml#ref14)).SVM
    can also be implemented as a functor in the optimization framework provided in
    this book. The cuSVM package can be freely downloaded from the Internet. [⁸](#fn0040)
    This same package is accessible from the R statistical language via the **gpuSvnTrain()**
    method in the gputools package. Speedups between 22 and 172 times the rate of
    state-of-the-art software are reported by the author ([Carpenter, 2011](B978012388426800015X.xhtml#ref13)).
    The CUDA-SVM package from Nanyang Technological University is available on [http://sourceforge.net](http://sourceforge.net).
    Another SVM package, multisvm, can be freely downloaded from [http://code.google.com](http://code.google.com).⁸[http://patternsonascreen.net/cuSVM.html](http://patternsonascreen.net/cuSVM.html).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 支持向量机（SVM）是一种流行的机器学习方法，用于分析数据和识别模式。SVM通过构建一个*N*维的*超平面*（将平面推广到*N*维）来进行分类，该平面最优地将数据分为两类。它们广泛用于分类和回归分析等任务。SVM模型与神经网络密切相关。事实上，使用sigmoid核函数的SVM模型相当于一个二层感知机神经网络。在文献中已报道，使用GPU加速的速度提升可达到150倍（[Catanzaro,
    Sundaram, & Keutzer, 2008](B978012388426800015X.xhtml#ref14)）。SVM也可以作为本书中提供的优化框架中的一个函子来实现。cuSVM包可以从互联网上免费下载。[⁸](#fn0040)
    该包也可以通过gputools包中的**gpuSvnTrain()**方法从R统计语言中访问。作者报告的加速比为22到172倍，超过了现有软件的速度（[Carpenter,
    2011](B978012388426800015X.xhtml#ref13)）。来自南洋理工大学的CUDA-SVM包可以在[http://sourceforge.net](http://sourceforge.net)上获得。另一个SVM包，multisvm，可以从[http://code.google.com](http://code.google.com)免费下载。⁸[http://patternsonascreen.net/cuSVM.html](http://patternsonascreen.net/cuSVM.html)。
- en: Bayesian Networks
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 贝叶斯网络
- en: A Bayesian belief net is a directed graph, together with an associated set of
    probability tables. The nodes represent variables, which can be discrete or continuous.
    The arcs in the graph represent causal/influential relationships between variables.
    The key feature of Bayesian networks is that they can be used to reason about
    uncertainty. When used in conjunction with statistical techniques, these graphical
    models have several advantages for data analysis:■ Because the model encodes dependencies
    among all variables, it can handle missing data.■ A Bayesian network can be used
    to learn causal relationships, and hence can be used to gain an understanding
    about a problem domain and to predict the consequences of intervention.■ A Bayesian
    model has both a causal and probabilistic semantics, which makes it a natural
    representation to combine prior knowledge (which often comes in causal form) and
    data.■ Bayesian statistical methods in conjunction with Bayesian networks offer
    an efficient and principled approach for avoiding the overfitting of data.Duke
    University provides a freely available Bayesian software that can also be accessed
    via MATLAB and the R statistical language. [⁹](#fn0045) Speedups of 160 times
    over a conventional multicore processor are reported ([Suchard et al., 2010](B978012388426800015X.xhtml#ref128)).
    CUDA allows large data sets to be analyzed with Bayesian techniques ([Chen, Schmidt,
    Weiguo, & Müller-Wittig, 2008](B978012388426800015X.xhtml#ref17)).⁹[http://www.stat.duke.edu/research/software/west/gpu/software.html](http://www.stat.duke.edu/research/software/west/gpu/software.html).BEAGLE
    (Broad-platform Evolutionary Analysis General Likelihood Evaluator) is a high-performance
    library that can perform the core calculations at the heart of most Bayesian and
    Maximum Likelihood phylogenetics packages. Phylogenetics is the study of evolutionary
    relatedness among various groups, species, or populations of organisms that is
    discovered through molecular sequencing data and morphological data matrices.
    The authors achieved a 90-times speedup over an optimized CPU version and a 140-times
    speedup over the general CPU version ([Suchard & Rambaut, 2009](B978012388426800015X.xhtml#ref129)).
    [^(10)](#fn9005) This library is used in the Bayesian phylogenetics framework
    (BEAST). [^(11)](#fn9010)^(10)[http://beagle-lib.googlecode.com](http://beagle-lib.googlecode.com).^(11)[http://beast.bio.ed.ac.uk](http://beast.bio.ed.ac.uk).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '贝叶斯信念网络是一个有向图，并且有一组相关的概率表。节点表示变量，这些变量可以是离散的或连续的。图中的弧线表示变量之间的因果/影响关系。贝叶斯网络的关键特性是它们可以用来推理不确定性。当与统计技术结合使用时，这些图形模型在数据分析中有几个优势：  '
- en: Mutual information
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 互信息
- en: The concept of mutual information has its origins in information theory and
    is widely used in many disciplines. For example, mutual information can be used
    to determine sites in the AIDS virus that are related for structural or functional
    reasons ([Korber, Farber, Wolpert, & Lapedes, 1993](B978012388426800015X.xhtml#ref81)).
    In particular, the paper by Korber et al. demonstrates how *bootstrapping* can
    be used to determine a confidence that high pair-wise mutual information did not
    arise by chance. (Bootstrapping in statistics can be implemented by various techniques,
    including by random sampling with replacement from the original data set.) Mutual
    information can also be used to improve prediction in machine-learning ([Farber,
    Lapedes, & Sirotkin, 1992](B978012388426800015X.xhtml#ref48)). There are numerous
    texts on this topic ([Cover & Thomas, 2006](B978012388426800015X.xhtml#ref24);
    [Stanisław, Carbonell, & Mitchell, 1985](B978012388426800015X.xhtml#ref120)) and
    many sources of information on the Internet.Pairwise mutual information provides
    a measure of the amount of information between two random variables. Generally,
    this measure is expressed in number of bits of information. Mutual information
    is defined in terms of entropies involving the joint probability distribution,
    ![B9780123884268000112/si1.gif is missing](B9780123884268000112/si1.gif), of occurrence
    symbol *s* at position and *s′* at position *j*. It can be expressed as the relation
    to the log-likelihood ratio of the expected occurrence of pairs (under the assumption
    of independence) to the observed occurrence. See [Equation 11.1](#fm0010), “A
    definition of mutual information.”(11.1)![B9780123884268000112/si2.gif is missing](B9780123884268000112/si2.gif)In
    medical image analysis, mutual information is used as a similarity measure for
    multimodal registration. CUDA provides a 50-times speedup, allowing real-time
    registration of medical images and in robotics ([Ines & Hirschmüller, 2008](B978012388426800015X.xhtml#ref75)).There
    are many freely downloadable implementations on the Internet. CUDA-MI[^(12)](#fn0050)
    is one; another is the version by Shams at the Australian National University.
    [^(13)](#fn0055)^(12)[https://sites.google.com/site/liuweiguohome/cuda-mi](https://sites.google.com/site/liuweiguohome/cuda-mi).^(13)[http://users.cecs.anu.edu.au/~ramtin/cuda.htm](http://users.cecs.anu.edu.au/~ramtin/cuda.htm).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 互信息的概念起源于信息论，并广泛应用于多个学科。例如，互信息可以用于确定艾滋病病毒中与结构或功能相关的位点（[Korber, Farber, Wolpert,
    & Lapedes, 1993](B978012388426800015X.xhtml#ref81)）。特别是，Korber 等人的论文展示了如何使用*自助法（bootstrapping）*来确定高成对互信息不太可能是偶然产生的置信度。（统计学中的自助法可以通过多种技术实现，包括从原始数据集中进行有放回的随机抽样。）互信息还可以用于提高机器学习中的预测效果（[Farber,
    Lapedes, & Sirotkin, 1992](B978012388426800015X.xhtml#ref48)）。关于这一主题有很多相关文献（[Cover
    & Thomas, 2006](B978012388426800015X.xhtml#ref24）；[Stanisław, Carbonell, & Mitchell,
    1985](B978012388426800015X.xhtml#ref120)），以及大量互联网上的资源。成对互信息提供了两个随机变量之间信息量的度量。通常，这一度量以比特数表示。互信息是通过联合概率分布的熵来定义的，![B9780123884268000112/si1.gif
    is missing](B9780123884268000112/si1.gif)，表示位置 *i* 上符号 *s* 和位置 *j* 上符号 *s′* 的发生。它可以通过对比独立性假设下成对事件期望发生率与实际发生率的对数似然比来表示。参见[公式
    11.1](#fm0010)，“互信息的定义。”（11.1）![B9780123884268000112/si2.gif is missing](B9780123884268000112/si2.gif)在医学图像分析中，互信息被用作多模态配准的相似性度量。CUDA
    提供了 50 倍的加速，使得医学图像的实时配准成为可能，并在机器人学中得到应用（[Ines & Hirschmüller, 2008](B978012388426800015X.xhtml#ref75)）。互联网上有许多可免费下载的实现版本。CUDA-MI[^(12)](#fn0050)就是其中之一，另一个是澳大利亚国立大学
    Shams 的版本。[^(13)](#fn0055)^(12)[https://sites.google.com/site/liuweiguohome/cuda-mi](https://sites.google.com/site/liuweiguohome/cuda-mi)。^(13)[http://users.cecs.anu.edu.au/~ramtin/cuda.htm](http://users.cecs.anu.edu.au/~ramtin/cuda.htm)。
- en: Force-Directed Graphs
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 力导向图
- en: Many graph based problems only provide information about the relationships between
    nodes in a graph. Such problems arise when people send messages to each other,
    talk on the phone, and travel to various locations. Visualizing mass amounts of
    such information can be challenging. Excellent surveys on drawing graphs can be
    found in [Di Battista, Eades, Tamassia, and Tollis (1999)](B978012388426800015X.xhtml#ref30)
    and [Brandes (2001)](B978012388426800015X.xhtml#ref11).In the absence of other
    information, force-directed placement algorithms for graph layout based on Hooke's
    law for springs have been used to create pleasing and informative graph layouts
    as described by Eades' spring-mass equations ([Eades, 1984](B978012388426800015X.xhtml#ref35))
    and later adapted by Fruchterman and Reingold to emulate particle physics in a
    simulated annealing algorithm ([Fruchterman & Reingold, 1991](B978012388426800015X.xhtml#ref52)).Graph
    placement and layout remains an active area of research, with Frishman and Ayellet
    ([Frishman & Ayellet, 2008](B978012388426800015X.xhtml#ref51)) using GPUs to speed-up
    incremental graph layout to provide results 17 times faster than a CPU. Godiyal
    et al. ([Godiyal, Hoberock, Garland, & Hart, 2009](B978012388426800015X.xhtml#ref54))
    use a variation of the Fast Multipole Method (FMM) to estimate the long-distance
    repulsive forces in force-directed layout. (The FMM method was developed to speed
    the calculation of long-range forces in the *N*-body problem.) Multipole computations
    are efficiently supported with a GPU-based k-d tree (a space-partitioning data
    structure for organizing points in a k-dimensional space). The authors report
    their technique achieves impressive speedup over previous CPU and GPU methods,
    drawing graphs with hundreds of thousands of vertices within a few seconds via
    CUDA.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 许多基于图的算法仅提供图中节点之间关系的信息。这类问题通常出现在人们互相发送消息、打电话和前往不同地点时。可视化大量此类信息可能具有挑战性。关于绘制图的优秀综述可以参考[Di
    Battista, Eades, Tamassia, 和 Tollis (1999)](B978012388426800015X.xhtml#ref30)和[Brandes
    (2001)](B978012388426800015X.xhtml#ref11)。在缺乏其他信息的情况下，基于弹簧的胡克定律的力导向布局算法已被用来创建令人愉悦且信息丰富的图布局，正如Eades的弹簧-质量方程所描述的那样（[Eades,
    1984](B978012388426800015X.xhtml#ref35)），后来Fruchterman和Reingold将其改编为模拟退火算法，模拟粒子物理学（[Fruchterman
    & Reingold, 1991](B978012388426800015X.xhtml#ref52)）。图的放置和布局仍然是一个活跃的研究领域，Frishman和Ayellet（[Frishman
    & Ayellet, 2008](B978012388426800015X.xhtml#ref51)）利用GPU加速增量图布局，提供比CPU快17倍的结果。Godiyal等人（[Godiyal,
    Hoberock, Garland, & Hart, 2009](B978012388426800015X.xhtml#ref54)）使用快速多极方法（FMM）的一种变体来估计力导向布局中的远程排斥力。（FMM方法是为加速*N*体问题中的远程力计算而开发的。）多极计算通过基于GPU的k-d树（用于在k维空间中组织点的空间分区数据结构）得到高效支持。作者报告称，他们的技术在CPU和GPU的先前方法中取得了显著的加速，通过CUDA在几秒钟内绘制了数十万个顶点的图。
- en: Monte Carlo Methods
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 蒙特卡洛方法
- en: 'Monte Carlo methods rely on repeated random sampling to compute their results.
    They are often used in simulating physical and mathematical systems and are especially
    useful for simulating systems with many coupled degrees of freedom (such as fluids)
    to model phenomena as well as systems with significant uncertainty in inputs such
    as the calculation of risk in business. Hubbard notes that Monte Carlo predictions
    of failures, cost overruns, and schedule overruns are routinely better than human
    intuition or alternative “soft” methods ([Hubbard, 2009](B978012388426800015X.xhtml#ref70)).Monte
    Carlo methods are widely used in mathematics to evaluate multidimensional definite
    integrals with complicated boundary conditions. For example, the Metropolis algorithm
    is a Monte Carlo method for obtaining a sequence of random samples from a probability
    distribution for which direct sampling is difficult. This sequence can be used
    to approximate the distribution or to compute an integral to get an expected value.I
    had the personal pleasure of knowing Nick Metropolis during my career in the theoretical
    division at Los Alamos National Laboratory, which demonstrates how knowledge of
    parallel computing can indirectly enrich your life. He was a wonderful person.
    The Metropolis algorithm is considered to be among the ten algorithms that have
    had the greatest influence on the development and practice of science and engineering
    in the twentieth century ([Andrieu, de Freitas, Doucet, & Jordan, 2003](B978012388426800015X.xhtml#ref4);
    [Beichel & Sullivan, 2000](B978012388426800015X.xhtml#ref5)). For some applications,
    Markov chain Monte Carlo (MCMC) simulation is the only known general approach
    for providing a solution within a reasonable time ([Andrieu, de Freitas, Doucet,
    & Jordan, 2003](B978012388426800015X.xhtml#ref4); [Dyer, Frieze, & Kannan, 1991](B978012388426800015X.xhtml#ref34);
    [Jerrum & Sinclair, 1996](B978012388426800015X.xhtml#ref77)).The large number
    of CUDA projects implementing Monte Carlo methods demonstrates the power of CUDA
    and interest in this technique. Speedups range from 100 times to over 1,000 times
    greater on multi-GPU implementations. A good starting reference is “Understanding
    GPU Programming for Statistical Computation: Studies in Massively Parallel Massive
    Mixtures” ([Suchard, Wang, Chan, Frelinger, Cron, & West, 2010](B978012388426800015X.xhtml#ref128)).A
    number of Monte Carlo packages are available for free download:■ The MCX (Monte
    Carlo eXtreme) package quotes 300- to 400-times speedups ([Fang & Boas, 2009](B978012388426800015X.xhtml#ref39)).
    The code can be freely downloaded from [http://mcx.sourceforge.net](http://mcx.sourceforge.net).■
    GPUSS (GPU Stochastic Simulation for data analysis) is freely available from Oxford
    University. The authors report a speedup of 500 times on the NVIDIA Community
    Showcase. [^(14)](#fn0060) This package is accessible from PyCUDA for statistical
    GPU computing. Please see the Oxford website for an extensive list of publications
    that use this package.^(14)[http://developer.nvidia.com/cuda-action-research-apps](http://developer.nvidia.com/cuda-action-research-apps).'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '蒙特卡洛方法依赖于反复的随机抽样来计算结果。它们常用于模拟物理和数学系统，特别是在模拟具有多个耦合自由度的系统（如流体）时，用于建模现象，以及处理输入中具有显著不确定性的系统，例如商业风险计算。Hubbard指出，蒙特卡洛在预测失败、成本超支和进度超支方面，通常比人类直觉或其他“软”方法更为准确（[Hubbard,
    2009](B978012388426800015X.xhtml#ref70)）。蒙特卡洛方法在数学中广泛用于评估具有复杂边界条件的多维定积分。例如，Metropolis算法是一种蒙特卡洛方法，用于从概率分布中获取一系列随机样本，而这种分布直接抽样是困难的。该序列可以用来近似该分布或计算积分以得到期望值。在我在洛斯阿拉莫斯国家实验室理论部的职业生涯中，我有幸认识了Nick
    Metropolis，这证明了并行计算的知识如何间接丰富你的生活。他是一个了不起的人。Metropolis算法被认为是二十世纪对科学和工程发展与实践影响最大的十种算法之一（[Andrieu,
    de Freitas, Doucet, & Jordan, 2003](B978012388426800015X.xhtml#ref4); [Beichel
    & Sullivan, 2000](B978012388426800015X.xhtml#ref5)）。对于某些应用，马尔科夫链蒙特卡洛（MCMC）模拟是已知的唯一能够在合理时间内提供解决方案的一般方法（[Andrieu,
    de Freitas, Doucet, & Jordan, 2003](B978012388426800015X.xhtml#ref4); [Dyer, Frieze,
    & Kannan, 1991](B978012388426800015X.xhtml#ref34); [Jerrum & Sinclair, 1996](B978012388426800015X.xhtml#ref77)）。大量实现蒙特卡洛方法的CUDA项目展示了CUDA的强大功能以及对这一技术的兴趣。在多GPU实现中，加速比范围从100倍到超过1000倍不等。一个好的入门参考是《Understanding
    GPU Programming for Statistical Computation: Studies in Massively Parallel Massive
    Mixtures》（[Suchard, Wang, Chan, Frelinger, Cron, & West, 2010](B978012388426800015X.xhtml#ref128)）。有一些蒙特卡洛包可以免费下载：  '
- en: Molecular Modeling
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分子建模
- en: Molecular modeling has also achieved significant performance benefits using
    CUDA ([Eastman & Pande, 2010](B978012388426800015X.xhtml#ref36); [Hampton, Agarwal,
    Alam, & Crozier, 2010](B978012388426800015X.xhtml#ref57); [Roberts, Stone, Sepulveda,
    Hwu, & Luthey-Schulten, 2009](B978012388426800015X.xhtml#ref107); [Rodrigues,
    Hardy, Stone, Schulten, & Hwu, 2008](B978012388426800015X.xhtml#ref108)), including
    packages such as:■ The NAMD/VMD molecular modeling system ([Humphrey, Dalke, &
    Schulten, 1996](B978012388426800015X.xhtml#ref71); [Laxmikant et al., 1999](B978012388426800015X.xhtml#ref86);
    [Stone, Hardy, Ufimtsev, & Schulten, 2010](B978012388426800015X.xhtml#ref123)).■
    HOOMD-Blue ([Anderson, Lorenz, & Travesset, 2008](B978012388426800015X.xhtml#ref3))
    was written from the ground up for GPUs.■ The OpenMM library for molecular dynamics.
    The authors report speedups of 100 times over commodity processors.All of these
    packages are freely downloadable from the Internet. The paper “GPU-Accelerated
    Molecular Modeling Coming of Age” ([Stone, Hardy, Ufimtsev, & Schulten, 2010](B978012388426800015X.xhtml#ref123))
    is required reading for those who are interested in molecular modeling. CUDA and
    GPU computing have also stimulated the development of new approximations for electrostatics
    that can provide up to three orders of magnitude speedup ([Anandakrishnan et al.,
    2010](B978012388426800015X.xhtml#ref1)). Over the past few years, molecular modeling
    has been a vibrant and growing area of CUDA research.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 分子建模通过使用CUDA也实现了显著的性能提升（[Eastman & Pande, 2010](B978012388426800015X.xhtml#ref36);
    [Hampton, Agarwal, Alam, & Crozier, 2010](B978012388426800015X.xhtml#ref57); [Roberts,
    Stone, Sepulveda, Hwu, & Luthey-Schulten, 2009](B978012388426800015X.xhtml#ref107);
    [Rodrigues, Hardy, Stone, Schulten, & Hwu, 2008](B978012388426800015X.xhtml#ref108)），包括以下软件包：■
    NAMD/VMD分子建模系统（[Humphrey, Dalke, & Schulten, 1996](B978012388426800015X.xhtml#ref71);
    [Laxmikant et al., 1999](B978012388426800015X.xhtml#ref86); [Stone, Hardy, Ufimtsev,
    & Schulten, 2010](B978012388426800015X.xhtml#ref123)）。■ HOOMD-Blue（[Anderson,
    Lorenz, & Travesset, 2008](B978012388426800015X.xhtml#ref3)）是专为GPU从头编写的。■ 用于分子动力学的OpenMM库。作者报告称，相比传统处理器，性能提升了100倍。这些软件包都可以从互联网上免费下载。论文《GPU加速分子建模的成熟》（[Stone,
    Hardy, Ufimtsev, & Schulten, 2010](B978012388426800015X.xhtml#ref123)）是对分子建模感兴趣的读者必读的文献。CUDA和GPU计算还刺激了新型电荷相互作用近似方法的发展，这些方法能提供高达三个数量级的加速（[Anandakrishnan
    et al., 2010](B978012388426800015X.xhtml#ref1)）。在过去的几年里，分子建模一直是CUDA研究中一个充满活力和不断发展的领域。
- en: Quantum Chemistry
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 量子化学
- en: Quantum chemistry applies quantum mechanics to explain and predict the behavior
    of chemical processes. Understanding the electronic structure of matter is an
    important question in materials design and the creation of more efficient batteries,
    membranes, solar panels, and a multitude of common materials. Many approaches
    use approximate solutions to the Schrödinger equation for determining the energy
    levels of molecules and the properties such as conductance, charge distribution,
    and reactivity. Other quantum chemical results include molecular geometry, the
    strengths and other characteristics of chemical bonds, optical and other spectra,
    intermolecular forces, and many other chemical properties and features of chemical
    behavior.Quantum ESPRESSO is a freely downloadable integrated suite of computer
    codes for electronic-structure calculations and materials modeling at the nano
    scale. It is based on density-functional theory, plane waves, and pseudopotentials
    (both norm-conserving and ultrasoft). A good starting article is “Speeding Up
    Plane-Wave Electronic-Structure Calculations Using Graphics-Processing Units”
    ([Maintz, Eck, & Dronskowski, 2011](B978012388426800015X.xhtml#ref90)). ICHEC
    has collaborated with the Quantum ESPRESSO project to create a GPU-based version
    of this code. Current speedups are reported at eight times that of a single-core
    processor. It is expected that this performance will increase as the GPU project
    matures.GPU-enabled quantum chemistry packages such as TeraChem ([Ufimtsev & Martinez,
    2008](B978012388426800015X.xhtml#ref135), [Ufimtsev & Martinez, 2009a](B978012388426800015X.xhtml#ref136)
    and [Ufimtsev & Martinez, 2009b](B978012388426800015X.xhtml#ref137)), now called
    PetaChem, are being deployed at major supercomputing centers such as National
    Center for Supercomputing Applications (NCSA).A number of researchers and organizations
    report excellent speedups on quantum chemistry simulations ([Hwu, 2011](B978012388426800015X.xhtml#ref72))
    including Gaussian and GAMESS ([Ufimtsev & Martinez, 2008](B978012388426800015X.xhtml#ref135)
    and [Ufimtsev & Martinez, 2009](B978012388426800015X.xhtml#ref136)). Pseudospectral
    methods run well on both GPUs and multicore processors. One implementation is
    BigDFT (BigDFT) ([Genovese et al., 2009](B978012388426800015X.xhtml#ref53)).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 量子化学应用量子力学来解释和预测化学过程的行为。理解物质的电子结构是材料设计以及创造更高效的电池、膜、太阳能电池板和多种常见材料中的一个重要问题。许多方法使用对薛定谔方程的近似解来确定分子的能级以及导电性、电荷分布和反应性等性质。其他量子化学结果包括分子几何、化学键的强度和其他特性、光谱及其他光谱、分子间力以及许多其他化学性质和化学行为特征。量子ESPRESSO是一个可免费下载的集成计算机代码套件，用于电子结构计算和纳米尺度的材料建模。它基于密度泛函理论、平面波和伪势（包括守恒范数和超软伪势）。一篇好的入门文章是“使用图形处理单元加速平面波电子结构计算”
    ([Maintz, Eck, & Dronskowski, 2011](B978012388426800015X.xhtml#ref90))。ICHEC与量子ESPRESSO项目合作，创建了该代码的基于GPU的版本。目前报告的加速比为单核处理器的八倍。预计随着GPU项目的成熟，这一性能将会提高。支持GPU的量子化学软件包如TeraChem
    ([Ufimtsev & Martinez, 2008](B978012388426800015X.xhtml#ref135), [Ufimtsev & Martinez,
    2009a](B978012388426800015X.xhtml#ref136) 和 [Ufimtsev & Martinez, 2009b](B978012388426800015X.xhtml#ref137))，现在称为PetaChem，正在国家超级计算应用中心（NCSA）等主要超级计算中心部署。一些研究人员和组织报告了量子化学模拟的优秀加速效果
    ([Hwu, 2011](B978012388426800015X.xhtml#ref72))，包括Gaussian和GAMESS ([Ufimtsev &
    Martinez, 2008](B978012388426800015X.xhtml#ref135) 和 [Ufimtsev & Martinez, 2009](B978012388426800015X.xhtml#ref136))。伪谱方法在GPU和多核处理器上运行良好。一种实现是BigDFT
    (BigDFT) ([Genovese et al., 2009](B978012388426800015X.xhtml#ref53))。
- en: Interactive Workflows
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 交互式工作流程
- en: GPGPUs provide additional performance benefits for dedicated usage, visualization,
    and interactive workflows, as they have been designed to be plugged into computers
    situated next to an instrument or individual's desk. The recent scientific literature
    demonstrates applications of this technology to a number of instruments and projects.
    For example, visualization packages such as Visual Molecular Dynamics (VMD) help
    make molecular modeling more interactive ([Stone, Hardy, Ufimtsev, & Schulten,
    2010](B978012388426800015X.xhtml#ref123)) through the use of haptic feedback ([Stone,
    Kohlmeyer, Vandivort, & Schulten, 2010](B978012388426800015X.xhtml#ref123)). Researchers
    Balanchi and Di Leonardo report a 350-times speedup that allowed them to incorporate
    real-time hologram generation into an optical micro manipulation workflow ([Bianchi
    & Di Leonardo, 2010](B978012388426800015X.xhtml#ref7)).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: GPGPU为专用用途、可视化和交互式工作流程提供了额外的性能优势，因为它们被设计为能够插入到位于仪器旁边或个人桌面的计算机中。近期的科学文献展示了这项技术在多个仪器和项目中的应用。例如，像“Visual
    Molecular Dynamics (VMD)”这样的可视化软件包通过使用触觉反馈（[Stone, Hardy, Ufimtsev, & Schulten,
    2010](B978012388426800015X.xhtml#ref123)），帮助使分子建模变得更加互动（[Stone, Kohlmeyer, Vandivort,
    & Schulten, 2010](B978012388426800015X.xhtml#ref123)）。研究人员Balanchi和Di Leonardo报告了一个350倍的加速，使他们能够将实时全息图生成纳入光学微操作工作流程中（[Bianchi
    & Di Leonardo, 2010](B978012388426800015X.xhtml#ref7)）。
- en: A Plethora of Projects
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 众多项目
- en: The previous examples represent but a few of many research efforts reporting
    significant benefits from the application of GPGPU technology. Bioinformatics
    ([Schmidt, 2010](B978012388426800015X.xhtml#ref112)), systems biology ([Dematte
    & Prandi, 2010](B978012388426800015X.xhtml#ref29)), multicellular biological modeling
    ([Christley, Lee, Dai, & Nie, 2010](B978012388426800015X.xhtml#ref18)), chemical
    and protein search ([Haque, Pande, & Walters, 2010](B978012388426800015X.xhtml#ref58);
    [Stivala, Stuckey, & Wirth, 2010](B978012388426800015X.xhtml#ref122)) are but
    a few additional broad areas. Use of a good Internet search engine can help identify
    research projects specific to your interests. Many projects make their software
    freely available.As discussed in [Chapter 8](B9780123884268000082.xhtml#B978-0-12-388426-8.00008-2),
    several general-purpose libraries to facilitate scientific computation such as
    NVIDIA's CUBLAS and CUFFT libraries along with the MAGMA (Matrix Algebra on GPU
    and Multicore Architectures) hybrid CPU/GPU library are also included in the SDK
    or available for download for free.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的示例仅代表了许多研究努力中的一小部分，这些研究报告了应用GPGPU技术所带来的显著益处。生物信息学 ([Schmidt, 2010](B978012388426800015X.xhtml#ref112))、系统生物学
    ([Dematte & Prandi, 2010](B978012388426800015X.xhtml#ref29))、多细胞生物建模 ([Christley,
    Lee, Dai, & Nie, 2010](B978012388426800015X.xhtml#ref18))、化学和蛋白质搜索 ([Haque, Pande,
    & Walters, 2010](B978012388426800015X.xhtml#ref58); [Stivala, Stuckey, & Wirth,
    2010](B978012388426800015X.xhtml#ref122)) 仅是其中几个额外的广泛领域。使用一个好的互联网搜索引擎可以帮助找到与你兴趣相关的研究项目。许多项目会免费提供其软件。如[第8章](B9780123884268000082.xhtml#B978-0-12-388426-8.00008-2)所讨论的，几种通用库可以促进科学计算，如NVIDIA的CUBLAS和CUFFT库，以及MAGMA（GPU和多核架构上的矩阵代数）混合CPU/GPU库，这些都包含在SDK中或可供免费下载。
- en: Summary
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概述
- en: The wealth of CUDA-based applications that have and are being developed makes
    this chapter incomplete. The intention is to provide links to some (and certainly
    not all!) important concepts and projects. Most of the referenced projects have
    software that can be freely downloaded, built, and used. Learning the basics of
    CUDA can be done quickly. The process of maturation takes much longer and involves
    reading papers, examining source code, and talking with your peers.The focus in
    this chapter has been on projects that can be freely downloaded from the Internet.
    Numerous for-sale projects are also out there. For example, AMBER is a commercial
    molecular dynamics application that can run on GPUs. [^(15)](#fn0065) Commercial
    drug discovery software also runs on GPUs, such as the OpenEye scientific software.
    [^(16)](#fn0070) Along with learning CUDA, such products show that work can be
    had for commercial CUDA/GPU development as well as opportunities to start your
    own technology company.^(15)[http://ambermd.org/gpus/](http://ambermd.org/gpus).^(16)[http://eyesopen.com](http://eyesopen.com).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 基于CUDA的应用程序种类繁多，且正在不断开发中，这使得本章内容显得不完整。本文的目的是提供一些（但绝对不是全部！）重要概念和项目的链接。大多数参考的项目都有可以自由下载、构建和使用的软件。CUDA的基础知识可以快速学习，然而技术的成熟需要更长的时间，这包括阅读论文、检查源代码以及与同行交流。本章的重点是可以从互联网自由下载的项目。市面上也有许多收费项目。例如，AMBER是一个商业分子动力学应用程序，可以在GPU上运行。[^(15)](#fn0065)
    商业药物发现软件也可以在GPU上运行，比如OpenEye科学软件。[^(16)](#fn0070) 除了学习CUDA，这些产品还展示了商业CUDA/GPU开发的工作机会，以及创办自己科技公司的机会。^(15)[http://ambermd.org/gpus/](http://ambermd.org/gpus)。^(16)[http://eyesopen.com](http://eyesopen.com)。
