["```py\nDistance (m), Mass (kg)\n0.0865,0.1\n0.1015,0.15\n…\n0.4416,0.9\n0.4304,0.95\n0.437,1.0\n```", "```py\n`np.polyfit(observed_x_vals, observed_y_vals, n)`\n```", "```py\n`np.polyfit(observed_x_vals, observed_y_vals, 1)`\n```", "```py\n`np.polyfit(observed_x_vals, observed_y_vals, 2)`\n```", "```py\n#find cubic fit\nfit = np.polyfit(forces, distances, 3)\npredicted_distances = np.polyval(fit, forces)\nplt.plot(forces, predicted_distances, 'k:', label = 'cubic fit')\n```", "```py\nfit = np.polyfit(forces, distances, 3)\npredicted_distances = np.polyval(fit, forces)\n```", "```py\na,b,c,d = np.polyfit(forces, distances, 3)\npredicted_distances = a*(forces**3) + b*forces**2 + c*forces + d\n```", "```py\n`distances = np.array(distances[:-6]) masses = np.array(masses[:-6])`\n```", "```py\n﻿print('r**2 of linear fit =', r_squared(mean_heights, altitudes))\n```", "```py\n﻿print('r**2 of quadratic fit =', r_squared(mean_heights, altitudes))\n```", "```py\n﻿﻿r**2 of linear fit = 0.0177433205440769\nr**2 of quadratic fit = 0.9857653692869693\n```", "```py\nHorizontal speed = 136 feet/sec\n```", "```py\nprint('Model predicts that 3**20 is roughly',\n      np.polyval(fit, [3**20])[0])\nprint('Actual value of 3**20 is', 3**20)\n```", "```py\n﻿Model predicts that 3**20 is roughly 2.4547827637212492e+48\nActual value of 3**20 is 3486784401\n```", "```py\n﻿x_vals, y_vals = [], []\nfor i in range(10):\n    x_vals.append(i)\n    y_vals.append(3**i)\nplt.plot(x_vals, y_vals, 'k')\nplt.semilogy()\n```", "```py\nx_vals = range(10)\nf = lambda x: 3**x\ny_vals = create_data(f, x_vals)\nplt.plot(x_vals, y_vals, 'ko', label = 'Actual values')\nfit, base = fit_exp_data(x_vals, y_vals)\npredictedy_vals = []\nfor x in x_vals:\n    predictedy_vals.append(base**np.polyval(fit, x))\nplt.plot(x_vals, predictedy_vals, label = 'Predicted values')\nplt.title('Fitting an Exponential Function')\nplt.legend(loc = 'upper left')\n#Look at a value for x not in original data\nprint('f(20) =', f(20))\nprint('Predicted value =', int(base**(np.polyval(fit, [20]))))\n```", "```py\nf(20) = 3486784401\nPredicted value = 3486784401 \n```", "```py\nf = lambda x: 3**x + x\n```", "```py\nf(20) = 3486784421\nPredicted value = 2734037145\n```"]